[{"/home/priyanshu/Desktop/MidTermProject/frontend/src/index.js":"1","/home/priyanshu/Desktop/MidTermProject/frontend/src/App.js":"2","/home/priyanshu/Desktop/MidTermProject/frontend/src/reportWebVitals.js":"3","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/FormCreation.js":"4","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Header/Header.js":"5","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/BasicInfo/BasicInfo.js":"6","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/AcademicQualification/Academic.js":"7","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Teaching&uniActivity/Activity.js":"8","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Research&Acadmic/Research&Acad.js":"9","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Temp.js":"10","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Login/Login.js":"11","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Store.js":"12","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueReducer.js":"13","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueType.js":"14","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueAction.js":"15","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicReducer.js":"16","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicType.js":"17","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicAction.js":"18","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/AcademicReducer.js":"19","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/Academictype.js":"20","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/AcademicAction.js":"21","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityReducer.js":"22","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityType.js":"23","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityAction.js":"24","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchReducer.js":"25","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchType.js":"26","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchAction.js":"27","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/ReportGenerater/ReportGenerater.js":"28","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/ReportGenerater/SelfAppraisal/SelfAppraisal.js":"29"},{"size":500,"mtime":1607772768351,"results":"30","hashOfConfig":"31"},{"size":617,"mtime":1609576209689,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1607772768351,"results":"33","hashOfConfig":"31"},{"size":5205,"mtime":1610533172259,"results":"34","hashOfConfig":"31"},{"size":2336,"mtime":1607845761617,"results":"35","hashOfConfig":"31"},{"size":15837,"mtime":1609605795818,"results":"36","hashOfConfig":"31"},{"size":10631,"mtime":1610384586027,"results":"37","hashOfConfig":"31"},{"size":16120,"mtime":1610395367434,"results":"38","hashOfConfig":"31"},{"size":13823,"mtime":1610518932742,"results":"39","hashOfConfig":"31"},{"size":226,"mtime":1608238322844,"results":"40","hashOfConfig":"31"},{"size":390,"mtime":1608238751063,"results":"41","hashOfConfig":"31"},{"size":793,"mtime":1610392581329,"results":"42","hashOfConfig":"31"},{"size":326,"mtime":1609575839701,"results":"43","hashOfConfig":"31"},{"size":40,"mtime":1609575549470,"results":"44","hashOfConfig":"31"},{"size":149,"mtime":1609575724550,"results":"45","hashOfConfig":"31"},{"size":1513,"mtime":1609584103473,"results":"46","hashOfConfig":"31"},{"size":40,"mtime":1609582457848,"results":"47","hashOfConfig":"31"},{"size":803,"mtime":1609584450535,"results":"48","hashOfConfig":"31"},{"size":794,"mtime":1610380949513,"results":"49","hashOfConfig":"31"},{"size":46,"mtime":1609588123532,"results":"50","hashOfConfig":"31"},{"size":440,"mtime":1609588924387,"results":"51","hashOfConfig":"31"},{"size":784,"mtime":1610389771518,"results":"52","hashOfConfig":"31"},{"size":46,"mtime":1610389368741,"results":"53","hashOfConfig":"31"},{"size":240,"mtime":1610389799244,"results":"54","hashOfConfig":"31"},{"size":610,"mtime":1610392481702,"results":"55","hashOfConfig":"31"},{"size":46,"mtime":1610392233486,"results":"56","hashOfConfig":"31"},{"size":211,"mtime":1610392530355,"results":"57","hashOfConfig":"31"},{"size":1698,"mtime":1610557359095,"results":"58","hashOfConfig":"31"},{"size":5981,"mtime":1610569605143,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"s2vf7z",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/priyanshu/Desktop/MidTermProject/frontend/src/index.js",[],["126","127"],"/home/priyanshu/Desktop/MidTermProject/frontend/src/App.js",["128"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Temp from \"./Components/FormCreation/Temp\";\nimport Login from \"./Components/FormCreation/Login/Login\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Components/FormCreation/Redux/Store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/form\" component={Temp} />\n          <Route exact path=\"/cards\" component={Login} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/reportWebVitals.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/FormCreation.js",["129","130","131"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Tabs, Tab, Typography, Box } from \"@material-ui/core/\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport BasicInfo from \"./BasicInfo/BasicInfo\";\nimport Academic from \"./AcademicQualification/Academic\";\nimport Activity from \"./Teaching&uniActivity/Activity\";\nimport ResearchandAcad from \"./Research&Acadmic/Research&Acad\";\nimport PropTypes from \"prop-types\";\nimport \"./FormCreation.css\";\nimport store from \"../FormCreation/Redux/Store\";\nimport { changeValue } from \"../FormCreation/Redux/Value/ValueAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReportGenerater from \"./ReportGenerater/ReportGenerater\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography style={{ textAlign: \"left\" }}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: \"#1d2e3b\",\n    display: \"flex\",\n    height: 224,\n  },\n  tabs: {\n    backgroundColor: '\"#1d2e3b',\n    color: \"white\",\n    width: \"100%\",\n    textAlign: \"left\",\n    // borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function FormCreation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  // console.log(store.getState());\n  const tabValue = useSelector((state) => state.value.value);\n  const dispatch = useDispatch();\n  // console.log(tabValue);\n  const handleChange = (event, newValue) => {\n    dispatch(changeValue(newValue));\n    // setValue(newValue);\n  };\n\n  return (\n    <div>\n      {/* <Header /> */}\n      <Grid container style={{ width: \"100%\", height: \"100vh\" }}>\n        <Grid\n          item\n          xs={2}\n          style={{\n            height: \"100%\",\n            backgroundColor: \"#1d2e3b\",\n            color: \"white\",\n            position: \"fixed\",\n          }}\n        >\n          <div className=\"center\">\n            <h2>\n              <span style={{ color: \"#00cec9\" }}>Form</span>Creation\n            </h2>\n          </div>\n          <div\n            style={{\n              marginTop: \"10px\",\n              height: \"90%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div className={classes.root}>\n              <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={tabValue}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                className={classes.tabs}\n              >\n                <Tab\n                  label=\"Basic Information\"\n                  {...a11yProps(0)}\n                  style={{ textAlign: \"left\" }}\n                />\n                <Tab label=\"Academic Qualification\" {...a11yProps(1)} />\n                <Tab label=\"Teaching & University Activity\" {...a11yProps(2)} />\n                <Tab label=\"Academic/Research Purpose\" {...a11yProps(3)} />\n                <Tab label=\"Generate Report\" {...a11yProps(4)} />\n                {/* <Tab label=\"Item Six\" {...a11yProps(5)} /> */}\n                {/* <Tab label=\"Item Seven\" {...a11yProps(6)} />  */}\n              </Tabs>\n            </div>\n            <div className=\"setting\">\n              <h4>\n                <HelpOutlineIcon />\n                Help\n              </h4>\n              <h4>\n                <SettingsIcon />\n                Settings\n              </h4>\n              <h4>\n                <ExitToAppIcon />\n                Sign out\n              </h4>\n            </div>\n          </div>\n        </Grid>\n\n        <Grid item xs={10} style={{ marginLeft: \"250px\" }}>\n          <TabPanel value={tabValue} index={0}>\n            <BasicInfo />\n          </TabPanel>\n          <TabPanel value={tabValue} index={1}>\n            <Academic />\n          </TabPanel>\n          <TabPanel value={tabValue} index={2}>\n            <Activity />\n          </TabPanel>\n          <TabPanel value={tabValue} index={3}>\n            <ResearchandAcad />\n          </TabPanel>\n          <TabPanel value={tabValue} index={4}>\n            <ReportGenerater />\n          </TabPanel>\n          {/* <TabPanel value={value} index={4}>\n            Item Five\n          </TabPanel>\n          <TabPanel value={value} index={5}>\n            Item Six\n          </TabPanel>\n          <TabPanel value={value} index={6}>\n            Item Seven\n          </TabPanel> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Header/Header.js",[],["132","133"],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/BasicInfo/BasicInfo.js",["134"],"import React, { useState } from \"react\";\nimport { Card, InputBase, Button } from \"@material-ui/core/\";\nimport \"./BasicInfo.css\";\nimport { changeValue } from \"../Redux/Value/ValueAction\";\nimport { storeBasicInfo } from \"../Redux/BasicInfo/BasicAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport store from \"../Redux/Store\";\nfunction BasicInfo(props) {\n  const dispatch = useDispatch();\n  const BasicInfo = useSelector((state) => state.Basicinfo);\n  console.log(BasicInfo);\n  const [name, setName] = useState(BasicInfo.Name);\n  const [empcode, setEmpcode] = useState(BasicInfo.Empcode);\n  const [fname, setFname] = useState(BasicInfo.Fathername);\n  const [mname, setMname] = useState(BasicInfo.Mothername);\n  const [schoolDepartment, setSchoolDepartment] = useState(\n    BasicInfo.NameofSchoolDepartment\n  );\n  const [dateofjoining, setDateofjoining] = useState(BasicInfo.dateofjoining);\n  const [dateoflastprom, setDateoflastprom] = useState(\n    BasicInfo.dateoflastprom\n  );\n  const [currentDesi, setCurrentDesi] = useState(BasicInfo.currentDesignation);\n  const [dob, setDob] = useState(BasicInfo.DateofBirth);\n  const [nationality, setNationality] = useState(BasicInfo.Nationality);\n  const [state, setState] = useState(BasicInfo.stateofdomocile);\n  const [maritalStatus, setMaritalStatus] = useState(BasicInfo.maritalStatus);\n  const [lastpromotion, setLastPromotion] = useState(BasicInfo.lastpromotion);\n  const [corresAddress, setCorresAddress] = useState(BasicInfo.corresAddress);\n  const [permaAddress, setPermaAddress] = useState(BasicInfo.permaAddress);\n  const [telephone, setTelephone] = useState(BasicInfo.telephone);\n  const [mobno, setMobno] = useState(BasicInfo.mobno);\n  const [email, setEmail] = useState(BasicInfo.email);\n  return (\n    <div>\n      <Card id=\"color-wheat\">\n        <form>\n          <div>\n            <h2>General Information and Academic Background</h2>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Name(In Block Letter) :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={name}\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Employee Code :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    padding: \"0 10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={empcode}\n                  type=\"number\"\n                  onChange={(e) => setEmpcode(e.target.value)}\n                  placeholder=\"Employee Code\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Father's Name :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={fname}\n                  onChange={(e) => setFname(e.target.value)}\n                  placeholder=\"Father Name\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Mother's Name :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={mname}\n                  onChange={(e) => setMname(e.target.value)}\n                  placeholder=\"Mother's Name\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>\n                  Name of the School\n                  <br />\n                  /Department/Center :\n                </p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={schoolDepartment}\n                  onChange={(e) => setSchoolDepartment(e.target.value)}\n                  placeholder=\"Name of the School\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>\n                  Date of joining in the\n                  <br /> University :\n                </p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={dateofjoining}\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  onChange={(e) => setDateofjoining(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Date of last promotion :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  type=\"date\"\n                  value={dateoflastprom}\n                  onChange={(e) => setDateoflastprom(e.target.value)}\n                  placeholder=\"Date of last promotion\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>\n                  Current Designation & <br />\n                  Level ( in Pay Matrix) :\n                </p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={currentDesi}\n                  onChange={(e) => setCurrentDesi(e.target.value)}\n                  placeholder=\"Designation and Level\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Date and Place of Birth :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  type=\"date\"\n                  value={dob}\n                  onChange={(e) => setDob(e.target.value)}\n                  placeholder=\"DOB\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Nationality :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={nationality}\n                  onChange={(e) => setNationality(e.target.value)}\n                  placeholder=\"Nationality\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>State of Domicile :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                  placeholder=\"State of Domicile\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Marital Status: :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={maritalStatus}\n                  onChange={(e) => setMaritalStatus(e.target.value)}\n                  placeholder=\"Marital Status:\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Last Promotion :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={lastpromotion}\n                  onChange={(e) => setLastPromotion(e.target.value)}\n                  placeholder=\"Last Promotion\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Address for Correspondence (with Pin Code) :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={corresAddress}\n                  onChange={(e) => setCorresAddress(e.target.value)}\n                  placeholder=\"Address\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Permanent Address (with Pin Code) :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={permaAddress}\n                  onChange={(e) => setPermaAddress(e.target.value)}\n                  placeholder=\"Permanent Address\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Telephone No :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={telephone}\n                  onChange={(e) => setTelephone(e.target.value)}\n                  placeholder=\"Telephone No\"\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>Mobile No :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  value={mobno}\n                  onChange={(e) => setMobno(e.target.value)}\n                  placeholder=\"Mobile No\"\n                />\n              </div>\n            </div>\n            <div className=\"fifty-perent\">\n              <div className=\"flex\">\n                <p>E-mail Address :</p>\n                <InputBase\n                  style={{\n                    marginTop: \"10px\",\n                    display: \"flex\",\n                    backgroundColor: \"white\",\n                    paddingLeft: \"10px\",\n                    height: \"35px\",\n                    borderRadius: \"5px\",\n                  }}\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"E-mail Address\"\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n      </Card>\n      <div className=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"30px\" }}\n          onClick={() => {\n            dispatch(changeValue(1));\n            dispatch(\n              storeBasicInfo(\n                name,\n                empcode,\n                fname,\n                mname,\n                schoolDepartment,\n                dateofjoining,\n                dateoflastprom,\n                currentDesi,\n                dob,\n                nationality,\n                state,\n                maritalStatus,\n                lastpromotion,\n                corresAddress,\n                permaAddress,\n                telephone,\n                mobno,\n                email\n              )\n            );\n          }}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default BasicInfo;\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/AcademicQualification/Academic.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Teaching&uniActivity/Activity.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Research&Acadmic/Research&Acad.js",["135","136"],"import React, { useState } from \"react\";\nimport { Card, InputBase, Button } from \"@material-ui/core/\";\nimport axios from \"axios\";\nimport { changeValue } from \"../Redux/Value/ValueAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { storeResearchInfo } from \"../Redux/Research/ResearchAction\";\nimport store from \"../Redux/Store\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n// import \"./Academic.css\";\nfunction ResearchandAcad(props) {\n  const Researchinfo = useSelector((state) => state.Researchinfo);\n  const dispatch = useDispatch();\n  const data = store.getState();\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [arraylist, setArrayList] = useState(Researchinfo.ResearchDetails);\n  // console.log(data);\n  const postData = async () => {\n    console.log(data);\n    axios\n      .post(`http://localhost:8000/post`, data)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data);\n        setError(res.data.message);\n        setOpen(true);\n      })\n      .catch((e) => {\n        console.log(e);\n        setError(\"Error Connection to the Server\");\n        setOpen(true);\n      });\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <div>\n      <Card id=\"color-wheat\">\n        <div>\n          <h2>Academic/Research Performance</h2>\n        </div>\n        <div>\n          <h3>Research Papers in Peer-Reviewed or UGC-notified Journals </h3>\n        </div>\n        {arraylist.map((key, index) => (\n          <div>\n            <div\n              style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n            >\n              <div className=\"flex\">\n                <div className=\"flex margin-academic\">\n                  <p>\n                    Title of paper with Vol no\n                    <br />\n                    ,page no, month and year:{\" \"}\n                  </p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].titleofpaper}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].titleofpaper = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Title\"\n                    required\n                  />\n                </div>\n                <div className=\"flex margin-academic\">\n                  <p>\n                    Name/Title of <br />\n                    journal\n                  </p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].nameofjournal}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].nameofjournal = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Name/Title\"\n                    required\n                  />\n                </div>\n                <div className=\"flex margin-academic\">\n                  <p>ISSN/ISBN No. </p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].ISSN}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].ISSN = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"ISSN/ISBN\"\n                    required\n                  />\n                </div>\n\n                <div className=\"flex margin-academic\">\n                  <p>Latest Impact Factor,if Any </p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                    }}\n                    value={arraylist[index].impactFactor}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].impactFactor = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Impact factor\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n            <div\n              style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n            >\n              <div className=\"flex\">\n                <div className=\"flex margin-academic\">\n                  <p>\n                    Indexing: Scopus/ Web of\n                    <br /> Science/ Any other\n                  </p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].indexing}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].indexing = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Indexing\"\n                    required\n                  />\n                </div>\n                <div className=\"flex margin-academic\">\n                  <p>No of Citations, excluding self citations)</p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].noofcitations}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].noofcitations = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Citations\"\n                    required\n                  />\n                </div>\n\n                <div className=\"flex margin-academic\">\n                  <p>Latest h-Index and impact factor, if any</p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                    }}\n                    value={arraylist[index].latestHindex}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].latestHindex = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"H-index\"\n                    required\n                  />\n                </div>\n                <div className=\"flex margin-academic\">\n                  <p>No. of authors</p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    type=\"Number\"\n                    value={arraylist[index].noofauthors}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].noofauthors = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"No. of Authors\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n            <div\n              style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}\n            >\n              <div className=\"flex\">\n                <div className=\"flex margin-academic\">\n                  <p>Whether main/ corresponding author</p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].mainauthors}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].mainauthors = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"Whether main/ corresponding author\"\n                    required\n                  />\n                </div>\n                <div className=\"flex margin-academic\">\n                  <p>National/ International</p>\n                  <InputBase\n                    style={{\n                      marginTop: \"10px\",\n                      display: \"flex\",\n                      backgroundColor: \"white\",\n                      paddingLeft: \"10px\",\n                      height: \"35px\",\n                      borderRadius: \"5px\",\n                      //   width: \"90px\",\n                      marginLeft: \"10px\",\n                    }}\n                    value={arraylist[index].nation_internation}\n                    onChange={(e) => {\n                      let newarraylist = [...arraylist];\n                      newarraylist[index].nation_internation = e.target.value;\n                      setArrayList(newarraylist);\n                    }}\n                    placeholder=\"National/ International\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n        <div className=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{\n              marginRight: \"10px\",\n            }}\n            onClick={() => {\n              let newarraylist = [...arraylist];\n              newarraylist.push({\n                degree: \"\",\n                subject: \"\",\n                year: \"\",\n                university: \"\",\n                state: \"\",\n              });\n              setArrayList(newarraylist);\n            }}\n          >\n            Add New\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              let newarraylist = [...arraylist];\n              newarraylist.pop();\n              setArrayList(newarraylist);\n            }}\n          >\n            Remove Last\n          </Button>\n        </div>\n      </Card>\n      <div className=\"flex-end\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"30px\" }}\n          onClick={() => {\n            dispatch(storeResearchInfo(arraylist));\n            postData();\n          }}\n        >\n          Submit\n        </Button>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={error}\n        action={\n          <React.Fragment>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default ResearchandAcad;\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Temp.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Login/Login.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Store.js",["137"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport ValueReducer from \"./Value/ValueReducer\";\nimport BasicReducer from \"./BasicInfo/BasicReducer\";\nimport AcademicReducer from \"./Academic/AcademicReducer\";\nimport ActivityReducer from \"./Activity/ActivityReducer\";\nimport ResearchReducer from \"./Research/ResearchReducer\";\n\nconst rootReducer = combineReducers({\n  value: ValueReducer,\n  Basicinfo: BasicReducer,\n  Academicinfo: AcademicReducer,\n  Activityinfo: ActivityReducer,\n  Researchinfo: ResearchReducer,\n});\n// const sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose()\n  // applyMiddleware(sagaMiddleware),\n  // window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n// sagaMiddleware.run(rootSaga);\n\nexport default store;\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueReducer.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueType.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Value/ValueAction.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicReducer.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicType.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/BasicInfo/BasicAction.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/AcademicReducer.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/Academictype.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Academic/AcademicAction.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityReducer.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityType.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Activity/ActivityAction.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchReducer.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchType.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/Redux/Research/ResearchAction.js",[],"/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/ReportGenerater/ReportGenerater.js",["138","139","140","141","142","143","144"],"import React, { useState } from \"react\";\nimport { Card, InputBase, Button } from \"@material-ui/core/\";\nimport { changeValue } from \"../Redux/Value/ValueAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { storeActivityInfo } from \"../Redux/Activity/ActivityAction\";\nimport \"./ReportGenerater.css\";\nimport SelfAppraisal from \"./SelfAppraisal/SelfAppraisal\";\nfunction ReportGenerater(props) {\n  const Activityinfo = useSelector((state) => state.Activityinfo);\n  const [statusSelf, setStatusSelf] = useState(false);\n  const [statusNaac, setStatusNaac] = useState(false);\n  const [data, setData] = useState({});\n  const getData = () => {\n    fetch(\"http://localhost:8000/selfAprraisalReport\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.data);\n        setData(data.data);\n        setStatusSelf(true);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  return (\n    <div>\n      <Card id=\"color-wheat\">\n        <div>\n          <h2>Generate Report</h2>\n        </div>\n\n        <div className=\"flex-end\" style={{ justifyContent: \"flex-start\" }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{\n              marginRight: \"10px\",\n            }}\n            onClick={getData}\n          >\n            Self-Appraisal\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {}}>\n            NAAC\n          </Button>\n        </div>\n        <div className=\"flex-end\" style={{ justifyContent: \"flex-start\" }}>\n          {statusSelf ? <SelfAppraisal data={data} /> : \"\"}\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default ReportGenerater;\n","/home/priyanshu/Desktop/MidTermProject/frontend/src/Components/FormCreation/ReportGenerater/SelfAppraisal/SelfAppraisal.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":12},{"ruleId":"149","severity":1,"message":"153","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":13},{"ruleId":"149","severity":1,"message":"154","line":69,"column":10,"nodeType":"151","messageId":"152","endLine":69,"endColumn":15},{"ruleId":"149","severity":1,"message":"155","line":69,"column":17,"nodeType":"151","messageId":"152","endLine":69,"endColumn":25},{"ruleId":"145","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","severity":1,"message":"153","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"158","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"159","line":37,"column":9,"nodeType":"151","messageId":"152","endLine":37,"endColumn":20},{"ruleId":"149","severity":1,"message":"160","line":1,"column":40,"nodeType":"151","messageId":"152","endLine":1,"endColumn":55},{"ruleId":"149","severity":1,"message":"161","line":2,"column":16,"nodeType":"151","messageId":"152","endLine":2,"endColumn":25},{"ruleId":"149","severity":1,"message":"158","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"162","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"163","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":27},{"ruleId":"149","severity":1,"message":"164","line":9,"column":9,"nodeType":"151","messageId":"152","endLine":9,"endColumn":21},{"ruleId":"149","severity":1,"message":"165","line":11,"column":10,"nodeType":"151","messageId":"152","endLine":11,"endColumn":20},{"ruleId":"149","severity":1,"message":"166","line":11,"column":22,"nodeType":"151","messageId":"152","endLine":11,"endColumn":35},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["167"],["168"],"'changeValue' is defined but never used.","'handleClick' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'InputBase' is defined but never used.","'useDispatch' is defined but never used.","'storeActivityInfo' is defined but never used.","'Activityinfo' is assigned a value but never used.","'statusNaac' is assigned a value but never used.","'setStatusNaac' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]